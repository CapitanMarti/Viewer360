<Window x:Class="Viewer360.View.MainWindow" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="clr-namespace:Viewer360.View"
        xmlns:conv="clr-namespace:Viewer360.Converters"
        Title="Scan2Bim 360° Viewer" Height="600" Width="880" WindowState="Normal"
        Icon="/Viewer360;component/Resources/icon_16.png">
    <Window.Resources>
        <conv:FullscreenToVisibilityConverter x:Key="fullscreenToVisibilityConverter"/>
        <conv:FullscreenToWindowStyleConverter x:Key="fullscreenToWindowStyleConverter"/>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>

        <!-- Stile di pulsante con animazione di pressione -->
        <Style x:Key="StandardButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.WindowStyle>
        <Binding Path="IsFullscreen" Converter="{StaticResource fullscreenToWindowStyleConverter}"/>
    </Window.WindowStyle>

    <Grid>
        <!-- StackPanel per i pulsanti al di fuori di myGrid -->
        <StackPanel Orientation="Vertical" HorizontalAlignment="Right" Margin="0,23,0,0" Width="80" Background="LightGray">
            <Button Content="Prev. Image" Margin="0,0,0,5" Style="{StaticResource StandardButtonStyle}" Click="PrevImage_Click" Width="80" Height="26" />
            <Button Content="Next Image" Margin="0,0,0,5" Style="{StaticResource StandardButtonStyle}" Click="NextImage_Click"/>
            <Button Content="Prev. Label" Margin="0,0,0,5" Style="{StaticResource StandardButtonStyle}" Click="PrevLabel_Click"/>
                <Button Content="Next Label" Margin="0,0,0,5" Style="{StaticResource StandardButtonStyle}" Click="NextLabel_Click"/>
            <ToggleButton Content="Edit">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Background" Value="LightGray"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="LightGreen"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <!-- Aggiungi altri pulsanti se necessario -->
        </StackPanel>

        <Grid Name="myGrid" Margin="0,0,80,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10.985"/>
                <ColumnDefinition Width="19*"/>
                <ColumnDefinition Width="69*"/>
                <ColumnDefinition Width="21*"/>
                <ColumnDefinition Width="59.917"/>
                <ColumnDefinition Width="122*"/>
                <ColumnDefinition Width="9*"/>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="180*"/>
                <ColumnDefinition Width="180*"/>

                <!--        <ColumnDefinition Width="58*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="74*"/> -->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Menu Visibility="{Binding IsFullscreen, Converter={StaticResource fullscreenToVisibilityConverter}}" Background="LightGray"  Height="23" VerticalAlignment="Top" Grid.ColumnSpan="10" Margin="0,0,-80,0" >
                <TextBlock Text="  Category: " />
                <ComboBox Name="oCategoryCombo" SelectionChanged="CategorySelectionChanged" Width="110" Height="19">
                    <!-- Elementi della ComboBox -->
                </ComboBox>
                <TextBlock Text="    Item: " />
                <ComboBox x:Name="oItemCombo" SelectionChanged="ItemSelectionChanged" Width="110" Height="19">
                    <!-- Elementi della ComboBox -->
                </ComboBox>
                <TextBlock Text="    Name: " />
                <TextBox Name="oElementName" Width="95" />
            </Menu>
            <Grid Grid.ColumnSpan="10" Margin="0,0,60,0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="69*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="115*"/>
                    <ColumnDefinition Width="350*"/>
                    <ColumnDefinition Width="46*"/>
                </Grid.ColumnDefinitions>
                <!--<Image Source="{Binding Image}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                <my:Viewer360View x:Name="viewer360_View" Image="{Binding Image}" Grid.ColumnSpan="7" Margin="0,-7,-60,0" Grid.RowSpan="2"/>

                <!--
            <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="White"
                    Visibility="{Binding ElementName=menuStatusBar,Path=IsChecked,Converter={StaticResource booleanToVisibilityConverter}}" Height="25" Width="270" Grid.Row="1" Grid.Column="4" >
                <TextBlock Foreground="Black" Text="{Binding ElementName=viewer360_View,Path=Theta,StringFormat='Theta: {0:0.0}°'}" Margin="4 4 4 4"/>
                <TextBlock Foreground="Black" Text="{Binding ElementName=viewer360_View,Path=Phi,StringFormat='Phi: {0:0.0}°'}" Margin="0 4 4 4"/>
                <TextBlock Foreground="Black" Text="{Binding ElementName=viewer360_View,Path=Hfov,StringFormat='HFOV: {0:0.0}°'}" Margin="0 4 4 4"/>
                <TextBlock Foreground="Black" Text="{Binding ElementName=viewer360_View,Path=Vfov,StringFormat='VFOV: {0:0.0}°'}" Margin="0 4 4 4"/>
                <TextBlock Foreground="Black" Text="{Binding Image.PixelWidth,StringFormat='Image size: {0}x'}" Margin="0 4 0 4"/>
                <TextBlock Foreground="Black" Text="{Binding Image.PixelHeight}" Margin="0 4 4 4"/>
            </WrapPanel>
-->
                <Polygon Points="350,210 450,210 450,310 350,310 " Name="ViewFinderPolygon" Stroke="Blue" StrokeThickness="2" Grid.RowSpan="2" Grid.ColumnSpan="7"/>

            </Grid>


        </Grid>

    </Grid>



</Window>
